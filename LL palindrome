 #include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Node{
	char data;
	struct Node* next;
	struct Node* prev;
} Node;

Node* createnode(char data){
	Node* newnode=(Node*)malloc(sizeof(Node));
	newnode->data = data;
	newnode->next = NULL;
	newnode->prev = NULL;
	return newnode;
}

void insert(Node** head, char data){
	Node* newnode = createnode(data);
	if(newnode==NULL){
		printf("INSUFFICENT MEMORY");
	}
	
	if(*head==NULL){
		*head = newnode;
	}
	else{
		Node* current = *head;
		while(current->next!=NULL){
			current=current->next;
		}
		current->next=newnode;
		newnode->prev=current;
	}
}

void pali(Node** head){
	if(*head==NULL){
		printf("\nThe entered string is not a palindrome\n");
		return;
	}
	Node* front= *head;
	Node* rear= *head;
	
	while(rear->next!=NULL){
		rear=rear->next;
	}
	while(front!=rear && front->prev!=rear){
		if(front->data!=rear->data){
			printf("\nThe entered string is not a palindrome\n");
			return;
		}
		front=front->next;
		rear=rear->prev;
	}
	printf("\nThe entered string is a palindrome\n");
}


void display(Node** head) {
  if (*head == NULL) {
      printf("List is empty");
  } else {
      Node* current = *head;
      while (current != NULL && current->next != *head) {
          printf("%c <-> ", current->data);
          current = current->next;
      }
      printf("NULL");
  }
}


int main(){
	char str[100];
	printf("Enter a String: ");
	scanf("%s",&str);
	
	Node* doublylist=NULL;
	
	for(int i=0;i<strlen(str);i++){
		insert(&doublylist,str[i]);
	}
	display(&doublylist);
	
	
	pali(&doublylist);
	
	return 0;
}
