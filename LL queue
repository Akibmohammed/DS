#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

typedef struct Node{
   int data;
   struct Node* next;
} Node;

Node* createnode(int data){
   Node* newnode=(Node*)malloc(sizeof(Node));
   newnode->data=data;
   newnode->next=NULL;
   return newnode;
}

void enqueue(Node** head,int data){
   Node* newnode = createnode(data);
   if(newnode == NULL){
       printf("insufficient memory");
       return;
   }
   if(*head == NULL){
       *head = newnode;
   } else {
       Node* ptr = *head;
       while(ptr->next != NULL){
       	ptr = ptr->next;
       	}
       	ptr->next = newnode;
   }
}

void dequeue(Node** head){
   if(*head==NULL){
       printf("stack is empty");
   } else {
       Node* ptr= *head;
       *head=(*head)->next;
       free(ptr);
   }
}

void display(Node** head){
   Node* current = *head;
   while(current != NULL){
       printf("%d -> ", current->data);
       current = current->next;
   }
   printf("NULL");
}

int main(){
	int a;
	int value;
	Node* linkedList = NULL;
	while(true){
	printf("\nOPerations: 1.enqueue  2.dequeue  3.display");
	printf("\nenter your choice(press 0 to exit): ");
	scanf("%d",&a);
		if(a!=0){
	
		switch(a){
			case 1: 
				printf("enter value: ");
				scanf("%d",&value); 
			    enqueue(&linkedList, value);
			    break;
			
			case 2:
				dequeue(&linkedList);
				break;
				
			case 3:
				display(&linkedList);
				break;
			
			default:
				printf("invalid");
				break;
				
			}
		}
		else
		break;
		
	}
