
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

typedef struct Node {
    int data;
    struct Node* next;
} Node;

Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void enqueue(Node** head, int data) {
    Node* newnode = createNode(data);
    if (newnode == NULL) {
        printf("Insufficient memory");
        return;
    }
    
    if (*head == NULL) {
        *head = newnode;
        newnode->next = *head;  
    } else {
        Node* ptr = *head;
        while (ptr->next != *head) {
            ptr = ptr->next;
        }
        ptr->next = newnode;
        newnode->next = *head; 
    }
}

void dequeue(Node** head) {
    if (*head == NULL) {
        printf("List is empty");
    } else {
        Node* temp = *head;
        Node* last = *head;

        while (last->next != *head) {
            last = last->next;
        }

        *head = (*head)->next;
        last->next = *head;  
        free(temp);
    }
}

void display(Node** head) {
    if (*head == NULL) {
        printf("List is empty");
    } else {
        Node* current = *head;
        while (current->next != *head) {
            printf("%d -> ", current->data);
            current = current->next;
        }
        printf("%d-> (head)\n", current->data);
    }
}



int main() {
    int choice, value;
    Node* circularList = NULL;

    while (true) {
        printf("\nOperations:\n1. Enqueue at back\n2. Dequeue\n3. Display");
        printf("\nEnter your choice (press 0 to exit): ");
        scanf("%d", &choice);

        if (choice != 0) {
            switch (choice) {
                case 1:
                    printf("Enter value: ");
                    scanf("%d", &value);
                    enqueue(&circularList, value);
                    break;

                case 2:
                    dequeue(&circularList);
                    break;

                case 3:
                    display(&circularList);
                    break;

                default:
                    printf("Invalid choice\n");
                    break;
            }
        } else {
            break;
        }
    }

    return 0;
}
